sudo: required

env:
  global:
    - ANDROID_API=27
    - BUILD_TOOLS="27.0.3"
    - NODE_VERSION="7.0.0"

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android build cache (see http://tools.android.com/tech-docs/build-cache)
    - $HOME/.android/build-cache

    # NVM
    - $HOME/.nvm

matrix:
  include:
  - os: linux
    env: CORDOVA_PLATFORM="browser"
    language: node_js
  - env: CORDOVA_PLATFORM="android" ANDROID_HOME=${HOME}/android-sdk
    os: linux
    language: android
    jdk: oraclejdk8

install:
  - if [[ `node --version` =~ "v{NODE_VERSION}" ]]; then
      rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm
      && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm
      install ${NODE_VERSION} > /dev/null;
    fi
  - node --version
  - exist=$(which cordova); if [[ -z "${exist}" ]]; then npm -g install cordova; fi
  - cordova --version
  - exist=$(which cordova-paramedic); if [[ -z "${exist}" ]]; then npm -g install cordova-paramedic; fi
  - if [[ "${CORDOVA_PLATFORM}" =~ android ]]; then
      if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ; fi;
      unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d ${ANDROID_HOME};
      echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'tools' > /dev/null;
      echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'platform-tools' > /dev/null;
      echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'build-tools;${BUILD_TOOLS}' > /dev/null;
      echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'platforms;android-${ANDROID_API}' > /dev/null;
      echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'extras;google;m2repository' > /dev/null;
    fi

# Emulator Management: Create, Start and Wait https://docs.travis-ci.com/user/languages/android#How-to-Create-and-Start-an-Emulator
before_script:
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      yes | sdkmanager "platforms;android-${ANDROID_API}";
      echo "y" | android update sdk -a --no-ui --filter android-$EMULATOR_API;
      echo "y" | android update sdk -a --no-ui --filter sys-img-armeabi-v7a-android-${ANDROID_API};
      echo no | android create avd --force -n test -t android-$EMULATOR_API --abi armeabi-v7a;
      emulator -avd test -no-window;
      android-wait-for-emulator;
      adb shell input keyevent 82;
      adb wait-for-device get-serialno;
    fi


script:
  - npm run test
  - if [[ "${CORDOVA_PLATFORM}" == "android" ]]; then
      cordova-paramedic  --cleanUpAfterRun --platform android --plugin '. --variable API_KEY_FOR_ANDROID=test';
    fi
