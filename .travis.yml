sudo: required

env:
  global:
    - ANDROID_API=27
    - BUILD_TOOLS="27.0.3"

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android build cache (see http://tools.android.com/tech-docs/build-cache)
    - $HOME/.android/build-cache

matrix:
  include:
  - os: linux
    env: CORDOVA_PLATFORM="browser"
    language: node_js
    node_js: '7.4.0'
  - env: CORDOVA_PLATFORM="android@7.0" ANDROID_HOME=${HOME}/android-sdk
    os: linux
    node_js: '7.4.0'
    language: android
    jdk: oraclejdk8

install:
  - if [[ "${CORDOVA_PLATFORM}" =~ android ]]; then
    if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then
      curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip ;
    fi;
    unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d ${ANDROID_HOME};
    echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'tools' > /dev/null;
    echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'platform-tools' > /dev/null;
    echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'build-tools;${BUILD_TOOLS}' > /dev/null;
    echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'platforms;android-${ANDROID_API}' > /dev/null;
    echo y | ${ANDROID_HOME}/tools/bin/sdkmanager 'extras;google;m2repository' > /dev/null;
  fi

# Emulator Management: Create, Start and Wait https://docs.travis-ci.com/user/languages/android#How-to-Create-and-Start-an-Emulator
before_script:
  - node --version
  - npm install -g cordova@8.1.0  cordova-paramedic@latest > /dev/null
  - cordova --version
  - if [[ "${CORDOVA_PLATFORM}" =~ android ]]; then
    yes | sdkmanager "platforms;android-${ANDROID_API}";
    echo "y" | android update sdk -a --no-ui --filter android-$EMULATOR_API;
    echo "y" | android update sdk -a --no-ui --filter sys-img-armeabi-v7a-android-${ANDROID_API};
    echo no | android create avd --force -n test -t android-$EMULATOR_API --abi armeabi-v7a;
    emulator -avd test -no-window ;
    android-wait-for-emulator;
    adb shell input keyevent 82 ;
    adb wait-for-device get-serialno ;
  fi

script:
  - cordova-paramedic  --cleanUpAfterRun --platform android --plugin '. --variable API_KEY_FOR_ANDROID=test' --justBuild
