sudo: required
language: node_js

env:
  global:
    - ANDROID_API=24
    - ANDROID_BUILD_TOOLS=28.0.3
    - NODE_VERSION=7.0.0

services:
  - couchdb

before_cache:
  # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    # Android SDK
    - $HOME/android-sdk-dl
    - $HOME/android-sdk

    # Gradle dependencies
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

    # Android directory
    - $HOME/.android

    # NVM
    - $HOME/.nvm

matrix:
  include:
    - os: linux
      env: CORDOVA_PLATFORM="browser"

      install:
        - nvm install ${NODE_VERSION}
        - nvm use ${NODE_VERSION}
        - node --version
        - exist=$(which cordova); if [[ -z "${exist}" ]]; then
            npm -g install cordova > /dev/null;
          fi
        - cordova --version
        - exist=$(which cordova-paramedic); if [[ -z "${exist}" ]]; then
            npm -g install cordova-paramedic > /dev/null;
          fi
        - npm i > /dev/null

    - env: CORDOVA_PLATFORM="android" ANDROID_HOME=${HOME}/android-sdk
      os: linux
      jdk: oraclejdk8

      install:
        - nvm install ${NODE_VERSION}
        - nvm use ${NODE_VERSION}
        - node --version
        - if test ! -e $HOME/android-sdk-dl/sdk-tools.zip ; then
            curl https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip > $HOME/android-sdk-dl/sdk-tools.zip;
            fi
        - unzip -qq -n $HOME/android-sdk-dl/sdk-tools.zip -d ${ANDROID_HOME};
        - exist=$(which cordova); if [[ -z "${exist}" ]]; then
            npm -g install cordova > /dev/null;
          fi
        - cordova --version
        - exist=$(which cordova-paramedic); if [[ -z "${exist}" ]]; then
            npm -g install cordova-paramedic > /dev/null;
          fi
        - if [[ ! -e "${HOME}/.android/repositories.cfg" ]]; then
            touch ${HOME}/.android/repositories.cfg > /dev/null;
          fi
        - if [[ ! -e "${HOME}/.android/avd" ]]; then
            mkdir -p ${HOME}/.android/avd/ > /dev/null;
          fi
        - echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager 'tools' > /dev/null
        - echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager 'platform-tools' > /dev/null
        - echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" > /dev/null
        - echo "y" | android update sdk -a --no-ui --filter android-${ANDROID_API}
        - echo "y" | android update sdk -a --no-ui --filter sys-img-armeabi-v7a-android-${ANDROID_API}
        - echo "y" | ${ANDROID_HOME}/tools/bin/sdkmanager 'extras;google;m2repository' > /dev/null
        - npm i > /dev/null
        - android list targets;
        - echo no | android create avd --force -n test -t android-${ANDROID_API} --abi armeabi-v7a
        - emulator -avd test -no-window &
        - android-wait-for-emulator
        - adb shell input keyevent 82
        - adb wait-for-device get-serialno


before_script:
  # Make sure CouchDB is up
  - while [ $? -ne 0 ]; do
      sleep 1 && curl -v http://localhost:5984;
    done
  - npm run test


script:
  - cordova-paramedic  --cleanUpAfterRun --platform ${CORDOVA_PLATFORM} --plugin '. --variable API_KEY_FOR_ANDROID=test'
