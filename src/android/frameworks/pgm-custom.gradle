def searchFileInParents(target) {
  def searchPath = target
  for (int i = 0; i < 8; i++) {
    println(searchPath)
    def targetFile = file(searchPath)
    if(!targetFile.canRead()) {
      searchPath = '../' + searchPath;
    } else {
      return targetFile;
    }
  }
  return null;
}

android {
  // #1. Find (project)/config.xml file,
  //     because ionic capacitor does not copy <preference> nodes
  def configXmlFile = searchFileInParents("config.xml")

  if (configXmlFile == null) {
    // #2. Find (project)/app/src/main/res/xml/config.xml file,
    //     cordova should copy <preference> to this file
    configXmlFile = searchFileInParents("app/src/main/res/xml/config.xml")
  }

  if (configXmlFile == null) {
    throw new GradleException("Can not find config.xml file.")
  }

  // parse xml file
  def widget = new XmlParser().parse(configXmlFile)
  if (widget.preference == null) {
    throw new GradleException("widget is null.")
  }

  // props.setProperty("ANDROID_SUPPORT_V4_VERSION", "27.1.1");
  def ANDROID_SUPPORT_V4_VERSION = "27.1.1"
  println("---->ANDROID_SUPPORT_V4_VERSION = 27.1.1")
  dependencies {
    // implementation "com.google.android.gms:play-services-maps:${PLAY_SERVICES_VERSION}"
    // implementation "com.google.android.gms:play-services-location:${PLAY_SERVICES_VERSION}"
    implementation "com.android.support:support-core-utils:${ANDROID_SUPPORT_V4_VERSION}"
  }
}
